/**
 * madana-api
 * <h1>API Quickstart Guide</h1>        <p>This documentation contains a Quickstart Guide, a few <a href=\"downloads.html\">sample clients</a>  for download and information about the available  <a href=\"resources.html\">endpoints</a>  and  <a href=\"data.html\">DataTypes</a>  </p>     <p>The <a target=\"_blank\" href=\"http://madana-explorer-staging.eu-central-1.elasticbeanstalk.com/login\">  MADANA Explorer</a> can be used to verify the interactions with the API</p>           <p>Internal use only. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a></p>         <br> <br>
 *
 * The version of the OpenAPI document: 0.4.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MadanaSampleclientJavascript);
  }
}(this, function(expect, MadanaSampleclientJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MadanaSampleclientJavascript.SocialServiceApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SocialServiceApi', function() {
    describe('getMyProfile', function() {
      it('should call getMyProfile successfully', function(done) {
        //uncomment below and update the code to test getMyProfile
        //instance.getMyProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPlatforms2', function() {
      it('should call getPlatforms2 successfully', function(done) {
        //uncomment below and update the code to test getPlatforms2
        //instance.getPlatforms2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRanking', function() {
      it('should call getRanking successfully', function(done) {
        //uncomment below and update the code to test getRanking
        //instance.getRanking(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSocialPlatformFeed', function() {
      it('should call getSocialPlatformFeed successfully', function(done) {
        //uncomment below and update the code to test getSocialPlatformFeed
        //instance.getSocialPlatformFeed(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserProfile', function() {
      it('should call getUserProfile successfully', function(done) {
        //uncomment below and update the code to test getUserProfile
        //instance.getUserProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getUserProfile_0', function() {
      it('should call getUserProfile_0 successfully', function(done) {
        //uncomment below and update the code to test getUserProfile_0
        //instance.getUserProfile_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
