/**
 * madana-api
 * <h1>API Quickstart Guide</h1>        <p>This documentation contains a Quickstart Guide, a few <a href=\"downloads.html\">sample clients</a>  for download and information about the available  <a href=\"resources.html\">endpoints</a>  and  <a href=\"data.html\">DataTypes</a>  </p>     <p>The <a target=\"_blank\" href=\"http://madana-explorer-staging.eu-central-1.elasticbeanstalk.com/login\">  MADANA Explorer</a> can be used to verify the interactions with the API</p>           <p>Internal use only. For more information visit <a href=\"https://www.madana.io\">www.madana.io</a></p>         <br> <br>
 *
 * The version of the OpenAPI document: 0.4.12
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.MadanaSampleclientJavascript);
  }
}(this, function(expect, MadanaSampleclientJavascript) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JsonAnalysisRequestAction', function() {
    it('should create an instance of JsonAnalysisRequestAction', function() {
      // uncomment below and update the code to test JsonAnalysisRequestAction
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be.a(MadanaSampleclientJavascript.JsonAnalysisRequestAction);
    });

    it('should have the property requestID (base name: "requestID")', function() {
      // uncomment below and update the code to test the property requestID
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

    it('should have the property user (base name: "user")', function() {
      // uncomment below and update the code to test the property user
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

    it('should have the property connection (base name: "connection")', function() {
      // uncomment below and update the code to test the property connection
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

    it('should have the property _date (base name: "date")', function() {
      // uncomment below and update the code to test the property _date
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

    it('should have the property fingerprint (base name: "fingerprint")', function() {
      // uncomment below and update the code to test the property fingerprint
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

    it('should have the property application (base name: "application")', function() {
      // uncomment below and update the code to test the property application
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

    it('should have the property details (base name: "details")', function() {
      // uncomment below and update the code to test the property details
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

    it('should have the property signature (base name: "signature")', function() {
      // uncomment below and update the code to test the property signature
      //var instane = new MadanaSampleclientJavascript.JsonAnalysisRequestAction();
      //expect(instance).to.be();
    });

  });

}));
